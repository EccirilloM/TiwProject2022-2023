// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EntityType {
  THREAD
  MESSAGE
  COMMENT
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  username     String     @unique
  password     String
  name         String     // Nome utente
  surname      String     // Cognome utente
  description  String?    @db.VarChar(200)
  joinedAt     DateTime   @default(now())  // Data e ora di registrazione, impostato automaticamente al momento della creazione
  profileImage String?    // Opzionale, può essere NULL
  comments     Comment[]
  messages     Message[]
  threads      Thread[]
  likes        Like[]
  dislikes     Dislike[]
  following    Follow[]   @relation("Follows")
  followers    Follow[]   @relation("FollowedBy")
}

model Thread {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(20)
  createdAt  DateTime  @default(now())
  userId     Int
  user       User      @relation(fields: [userId], references: [id])
  messages   Message[]
  likeCount  Int       @default(0)
  dislikeCount Int     @default(0)
}

model Message {
  id         Int      @id @default(autoincrement())
  text       String   @db.VarChar(100)
  createdAt  DateTime @default(now())
  image      String?  // Opzionale, può essere NULL
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  comments   Comment[]
  threadId   Int
  thread     Thread   @relation(fields: [threadId], references: [id])
  likeCount  Int       @default(0)
  dislikeCount Int     @default(0)
}

model Comment {
  id       Int      @id @default(autoincrement())
  text     String   @db.VarChar(150)
  createdAt  DateTime @default(now())
  userId   Int
  user     User     @relation(fields: [userId], references: [id])
  messageId Int
  message   Message   @relation(fields: [messageId], references: [id])
  likeCount  Int       @default(0)
  dislikeCount Int     @default(0)
}

model Follow {
  id          Int      @id @default(autoincrement())
  followedId  Int
  followerId  Int
  followed    User     @relation("FollowedBy", fields: [followedId], references: [id])
  follower    User     @relation("Follows", fields: [followerId], references: [id])

  @@unique([followerId, followedId])
}

model Like {
  id         Int        @id @default(autoincrement())
  userId     Int
  user       User       @relation(fields: [userId], references: [id])
  entityType EntityType
  entityId   Int
}

model Dislike {
  id         Int        @id @default(autoincrement())
  userId     Int
  user       User       @relation(fields: [userId], references: [id])
  entityType EntityType
  entityId   Int
}